{
  "Resources": {
    "ecsworkshopcapacityprovidersec2ClusterSecGrpfromecsworkshopcapacityprovidersec2EC2CapacityProviderServiceLBSecurityGroup97DF3EC13276865535377BCE64": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 32768,
        "GroupId": {
          "Fn::ImportValue": "ECSSecGrpList"
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "EC2CapacityProviderServiceLBSecurityGroup1FC0A81A",
            "GroupId"
          ]
        },
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/ecsworkshop-capacityproviders-ec2/ClusterSecGrp/from ecsworkshopcapacityprovidersec2EC2CapacityProviderServiceLBSecurityGroup97DF3EC1:32768-65535"
      }
    },
    "EC2CapacityProviderServiceLBDC92E31F": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "EC2CapacityProviderServiceLBSecurityGroup1FC0A81A",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          "subnet-03689657e2849a8fc",
          "subnet-051f9ae27f68f8f74"
        ],
        "Type": "application"
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/LB/Resource"
      }
    },
    "EC2CapacityProviderServiceLBSecurityGroup1FC0A81A": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB ecsworkshopcapacityprovidersec2EC2CapacityProviderServiceLBDD157FE0",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": "vpc-0cad99f4a01936d39"
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/LB/SecurityGroup/Resource"
      }
    },
    "EC2CapacityProviderServiceLBSecurityGrouptoecsworkshopcapacityprovidersec2ClusterSecGrp2FAA187832768655354D60F766": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "EC2CapacityProviderServiceLBSecurityGroup1FC0A81A",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::ImportValue": "ECSSecGrpList"
        },
        "FromPort": 32768,
        "ToPort": 65535
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/LB/SecurityGroup/to ecsworkshopcapacityprovidersec2ClusterSecGrp2FAA1878:32768-65535"
      }
    },
    "EC2CapacityProviderServiceLBPublicListenerD5E769DC": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "EC2CapacityProviderServiceLBPublicListenerECSGroupFB7C9653"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "EC2CapacityProviderServiceLBDC92E31F"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/LB/PublicListener/Resource"
      }
    },
    "EC2CapacityProviderServiceLBPublicListenerECSGroupFB7C9653": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "VpcId": "vpc-0cad99f4a01936d39"
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/LB/PublicListener/ECSGroup/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefTaskRoleE63CB5D4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/TaskRole/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefTaskRoleDefaultPolicyD8AD577A": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecs:ListTasks",
                "ecs:DescribeTasks"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EC2CapacityProviderServiceTaskDefTaskRoleDefaultPolicyD8AD577A",
        "Roles": [
          {
            "Ref": "EC2CapacityProviderServiceTaskDefTaskRoleE63CB5D4"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/TaskRole/DefaultPolicy/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefEF5CC3D5": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "ContainerDefinitions": [
          {
            "Cpu": 256,
            "Environment": [
              {
                "Name": "AWS_DEFAULT_REGION",
                "Value": "us-west-1"
              }
            ],
            "Essential": true,
            "Image": "adam9098/ecsdemo-capacityproviders:latest",
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "EC2CapacityProviderServiceTaskDefwebLogGroupADF50DEA"
                },
                "awslogs-stream-prefix": "EC2CapacityProviderService",
                "awslogs-region": "us-west-1"
              }
            },
            "Memory": 512,
            "Name": "web",
            "PortMappings": [
              {
                "ContainerPort": 5000,
                "HostPort": 0,
                "Protocol": "tcp"
              }
            ]
          }
        ],
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "EC2CapacityProviderServiceTaskDefExecutionRole8EC4417E",
            "Arn"
          ]
        },
        "Family": "ecsworkshopcapacityprovidersec2EC2CapacityProviderServiceTaskDef68AF634B",
        "NetworkMode": "bridge",
        "RequiresCompatibilities": [
          "EC2"
        ],
        "TaskRoleArn": {
          "Fn::GetAtt": [
            "EC2CapacityProviderServiceTaskDefTaskRoleE63CB5D4",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefwebLogGroupADF50DEA": {
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/web/LogGroup/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefExecutionRole8EC4417E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/ExecutionRole/Resource"
      }
    },
    "EC2CapacityProviderServiceTaskDefExecutionRoleDefaultPolicyECD3E026": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "EC2CapacityProviderServiceTaskDefwebLogGroupADF50DEA",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EC2CapacityProviderServiceTaskDefExecutionRoleDefaultPolicyECD3E026",
        "Roles": [
          {
            "Ref": "EC2CapacityProviderServiceTaskDefExecutionRole8EC4417E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/TaskDef/ExecutionRole/DefaultPolicy/Resource"
      }
    },
    "EC2CapacityProviderServiceF75CB01B": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Fn::ImportValue": "ECSClusterName"
        },
        "DeploymentConfiguration": {
          "MaximumPercent": 200,
          "MinimumHealthyPercent": 50
        },
        "DesiredCount": 1,
        "EnableECSManagedTags": false,
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "web",
            "ContainerPort": 5000,
            "TargetGroupArn": {
              "Ref": "EC2CapacityProviderServiceLBPublicListenerECSGroupFB7C9653"
            }
          }
        ],
        "SchedulingStrategy": "REPLICA",
        "ServiceName": "ecsdemo-capacityproviders-ec2",
        "TaskDefinition": {
          "Ref": "EC2CapacityProviderServiceTaskDefEF5CC3D5"
        }
      },
      "DependsOn": [
        "EC2CapacityProviderServiceLBPublicListenerECSGroupFB7C9653",
        "EC2CapacityProviderServiceLBPublicListenerD5E769DC"
      ],
      "Metadata": {
        "aws:cdk:path": "ecsworkshop-capacityproviders-ec2/EC2CapacityProviderService/Service/Service"
      }
    }
  },
  "Outputs": {
    "EC2CapacityProviderServiceLoadBalancerDNS3B55F46D": {
      "Value": {
        "Fn::GetAtt": [
          "EC2CapacityProviderServiceLBDC92E31F",
          "DNSName"
        ]
      }
    },
    "EC2CapacityProviderServiceServiceURL81036241": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": [
                "EC2CapacityProviderServiceLBDC92E31F",
                "DNSName"
              ]
            }
          ]
        ]
      }
    }
  }
}